import React, { useEffect, useState } from 'react';
import './styles/main.css';
import product1Image from './assets/product1.png';
import product2Image from './assets/product2.png';



const Modal = ({ closeModal }) => {
  const handleLogin = (event) => {
    event.preventDefault();
    closeModal();
  };

  return (
    <div className="modal">
      <div className="modal-content">
        <span className="close" onClick={closeModal}>&times;</span>
        <h2>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
        <form onSubmit={handleLogin}>
          <div className="form-group">
            <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
            <input type="text" id="username" name="username" required />
          </div>
          <div className="form-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å:</label>
            <input type="password" id="password" name="password" required />
          </div>
          <div className="form-group">
            <button type="submit" className="login-button">–í–æ–π—Ç–∏</button>
          </div>
        </form>
      </div>
    </div>
  );
};


const UserProfile = () => {
  const [user, setUser] = useState({
    name: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    email: 'email@example.com'
    // –î—Ä—É–≥–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  });

  const handleChange = (e) => {
    setUser({...user, [e.target.name]: e.target.value});
  }

  return (
    <div className="user-profile">
      <h2>–õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ—Ç</h2>
      <form>
        <div>
          <label>–ò–º—è:</label>
          <input
            type="text"
            name="name"
            value={user.name}
            onChange={handleChange}
          />
        </div>
        <div>
          <label>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞:</label>
          <input
            type="email"
            name="email"
            value={user.email}
            onChange={handleChange}
          />
        </div>
        {/* –î—Ä—É–≥–∏–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã */}
        <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
      </form>
    </div>
  );
};

const Header = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);

  const openModal = () => setIsModalOpen(true);
  const closeModal = () => setIsModalOpen(false);

  return (
    <div className="header">
      <span className="logo">Home</span>
      <input className="search-input" type="text" placeholder="Search" />
      <button onClick={openModal} className="login-button">–í–æ–π—Ç–∏</button>
      {isModalOpen && <Modal closeModal={closeModal} />}
    <input className="search-input" type="text" placeholder="Search" />
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
const ProductCard = ({ icon, label }) => (
  <div className="product-card">
    <div className="icon">{icon}</div>
    <div className="label">{label}</div>
  </div>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ–∫—Ü–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
const MainSection = () => (
  <div className="main-section">
    <ProductCard icon="üì±" label="Phone" />
    <ProductCard icon="üåê" label="Globe" />
    <ProductCard icon="üè†" label="House" />
    <ProductCard icon="üì±" label="Phone" />
    <ProductCard icon="üåê" label="Globe" />
    <ProductCard icon="üè†" label="House" />
  </div>
);


const handleAddToCart = () => {};
const handleRemoveFromCart = () => {};

// –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –±–ª–æ–∫–∞–º–∏
const Content = ({ onAddToCart, onRemoveFromCart, cartItems }) => (
  <div className="content">
    <ContentBlock
      title="–°–º–∞—Ä—Ç—Ñ–æ–Ω X12"
      description="–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä –≤—ã—Å–æ–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Å –°–º–∞—Ä—Ç—Ñ–æ–Ω–æ–º X12.
      –≠—Ç–æ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–µ—Ä–µ–¥–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä,
      —É–ª—å—Ç—Ä–∞-—è—Ä–∫–∏–π —ç–∫—Ä–∞–Ω –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–∞–º–µ—Ä,
       –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ —Å–Ω–∏–º–∫–∏.
       –ë–∞—Ç–∞—Ä–µ—è –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –µ–º–∫–æ—Å—Ç–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã,
        –∞ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–µ–ª–∞–µ—Ç –µ–≥–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º, –∞ –º–æ–¥–Ω—ã–º –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–º."
      id={1}
      price="$349"
      image={product1Image}
      onAddToCart={onAddToCart}
      onRemoveFromCart={onRemoveFromCart}
      cartItems={cartItems}
    />
    <ContentBlock
      title="–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –°—É–º–∫–∞ Parisienne"
      description="–ü–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ –¥—É—Ö –ü–∞—Ä–∏–∂–∞ —Å –≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–π –°—É–º–∫–æ–π Parisienne.
       –°–æ–∑–¥–∞–Ω–Ω–∞—è –∏–∑ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–∂–∏, —ç—Ç–∞ —Å—É–º–∫–∞ —Å–æ—á–µ—Ç–∞–µ—Ç –≤ —Å–µ–±–µ –∫–ª–∞—Å—Å–∏–∫—É –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –º–æ–¥—ã.
       –°—É–º–∫–∞ –æ—Å–Ω–∞—â–µ–Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–º –æ—Å–Ω–æ–≤–Ω—ã–º –æ—Ç–¥–µ–ª–µ–Ω–∏–µ–º –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–∞—Ä–º–∞–Ω–∞–º–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ—ë –∏–¥–µ–∞–ª—å–Ω–æ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π."
      id={2}
      price="$450"
      image={product2Image}
      onAddToCart={onAddToCart}
      onRemoveFromCart={onRemoveFromCart}
      cartItems={cartItems}
    />
  </div>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
const ContentBlock = ({ id, title, description, price, image, onAddToCart, onRemoveFromCart, cartItems }) => {
  const [inCart, setInCart] = useState(false);

  useEffect(() => {
    if (cartItems) {
      const isItemInCart = cartItems.some(item => item.id === id);
      setInCart(isItemInCart);
    }
  }, [cartItems, id]);

  const addToCart = () => {
    onAddToCart({ id, title, price, image });
    setInCart(true);
  };

  const removeFromCart = () => {
    onRemoveFromCart(id);
    setInCart(false);
  };

  return (
    <div className="content-block">
      <div className="content-image-container">
        <img src={image} alt={title} className="content-image" />
      </div>
      <div className="content-text">
        <h3 className="content-title">{title}</h3>
        <p className="content-description">{description}</p>
        <p className="content-description">{price}</p>
        {inCart ? (
          <button onClick={removeFromCart} className="button remove">
            Remove from Cart
          </button>
        ) : (
          <button onClick={addToCart} className="button add">
            Add to Cart
          </button>
        )}
      </div>
    </div>
  );
};

const Cart = ({ cartItems, onRemoveFromCart }) => {
  return (
    <div className="cart-container">
      <h2>Shopping Cart</h2>
      {cartItems.length === 0 ? (
        <p>The cart is empty.</p>
      ) : (
        cartItems.map((item, index) => (
          <div key={index} className="cart-item">
            <img src={item.image} alt={item.title} className="cart-item-image" />
            <div className="cart-item-details">
              <h4>{item.title}</h4>
              <p>${item.price}</p>
              <button onClick={() => onRemoveFromCart(item.id)} className="remove-item-button">
                Remove
              </button>
            </div>
          </div>
        ))
      )}
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏
const NavBar = () => (
  <div className="navbar">
    <span className="nav-icon">üè†</span>
    <span className="nav-icon">üîç</span>
  </div>
);


function App() {
    const [cartItems, setCartItems] = useState([]);

    const handleAddToCart = (product) => {
        setCartItems(prevItems => [...prevItems, product]);
    };

    const handleRemoveFromCart = (id) => {
        setCartItems(prevItems => prevItems.filter(item => item.id !== id));
    };

    return (
        <div>
          <Header />
          <MainSection />
          <Content onAddToCart={handleAddToCart} onRemoveFromCart={handleRemoveFromCart} cartItems={cartItems} />
          <Cart cartItems={cartItems} onRemoveFromCart={handleRemoveFromCart} />
          <NavBar />
        </div>
      );
}

export default App;
